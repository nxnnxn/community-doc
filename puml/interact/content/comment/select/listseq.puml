@startuml
!include <C4/C4_Sequence>
SHOW_INDEX()
SHOW_LEGEND()
title 评论列表时序图
Person(user, "用户")
System(gateway,"网关系统")

Container_Boundary(commentFacade, "评论应用")
    Component(checkComponent, "校验组件", "component", "参数校验")
    Component(recComponent, "推荐组件", "component", "分组组件")
    Component(listFacadeComponent, "评论FEED组件", "component", "评论FEED组件")
    Component(facadeCacheComponent, "前台缓存组件", "component", "缓存组件")
Boundary_End()

Container_Boundary(commentService, "评论服务")
    Component(listComponent, "评论列表组件", "component", "评论列表组件")
Boundary_End()
System(tpp,"推荐系统")
System_Ext(userSystem,"用户系统")
System_Ext(videoSystem,"视频系统")
System(relationSystem,"关系系统")
System(rocketmq,"MQ")
System(redis,"缓存","redis")
ComponentDb(db, "数据库", "Mysql")


== 评论列表 ==
Rel(user, gateway, "请求")
Rel(gateway, checkComponent, "发起请求,校验参数")
Rel(checkComponent, recComponent, "请求")
Rel(recComponent, tpp, "请求推荐系统")
Rel(tpp, recComponent, "请求推荐系统")
Rel(recComponent, listFacadeComponent, "若请求超时或出错,走按照时间排序")
alt 默认排序
 Rel(listFacadeComponent, listComponent, "直接请求列表接口")
 Rel(listComponent, redis, "获取列表IDs接口")
 BiRel(redis, db, "若缓存没有直接DB")
 Rel(redis, listComponent, "返回")
 Rel(listComponent, listComponent, "请求ByIds接口")
else 推荐排序
 Rel(listFacadeComponent, listComponent, "请求ByIds接口")
end
 Rel(listComponent, redis, "请求")
 BiRel(redis, db, "若缓存没有直接DB")
 Rel(redis, listComponent, "返回")
 Rel(listComponent, listFacadeComponent, "返回")
 Rel(listFacadeComponent, listFacadeComponent, "FeedMerge数据")
 BiRel(listFacadeComponent, userSystem, "获取用户信息")
 BiRel(listFacadeComponent, relationSystem, "获取互动信息")
 Rel(listFacadeComponent, gateway, "返回")
 Rel(gateway, user, "返回")

== 列表缓存更新 ==
Rel(rocketmq, listComponent, "监听到变更")
Rel(listComponent, listComponent, "redis10分钟幂未通过,返回")
alt 评论状态变更
  Rel(listComponent, redis, "更新评论列表缓存&新增单条记录缓存")
  Rel(redis, listComponent, "更新")
alt 是否每隔1分钟裁剪列表缓存
  Rel(listComponent, redis, "维持ZSET列表在合理长度")
  Rel(redis, listComponent, "更新")
end
end
Rel(listComponent, rocketmq, "完成更新")
SHOW_LEGEND()
@enduml
